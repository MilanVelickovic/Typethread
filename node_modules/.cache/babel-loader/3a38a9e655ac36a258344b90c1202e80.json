{"ast":null,"code":"var _jsxFileName = \"/home/milan/Documents/GitHub/Typethread/src/components/UI/Button/Button.js\";\nimport React from 'react';\nimport './Button.css';\n\nconst Button = props => {\n  let attachedClasses = [\"Button\"];\n\n  switch (props.size) {\n    case \"small\":\n      attachedClasses.push(\"smallButton\");\n      break;\n\n    case \"medium\":\n      attachedClasses.push(\"mediumButton\");\n      break;\n\n    case \"large\":\n      attachedClasses.push(\"largeButton\");\n      break;\n\n    default:\n      break;\n  }\n\n  switch (props.color) {\n    case \"orange\":\n      attachedClasses.push(\"orangeButton\");\n      break;\n\n    case \"purple\":\n      attachedClasses.push(\"purpleButton\");\n      break;\n\n    default:\n      break;\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: attachedClasses.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default Button;","map":{"version":3,"sources":["/home/milan/Documents/GitHub/Typethread/src/components/UI/Button/Button.js"],"names":["React","Button","props","attachedClasses","size","push","color","join","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtB,MAAIC,eAAe,GAAG,CAAC,QAAD,CAAtB;;AAEA,UAAQD,KAAK,CAACE,IAAd;AACI,SAAK,OAAL;AACID,MAAAA,eAAe,CAACE,IAAhB,CAAqB,aAArB;AACA;;AACJ,SAAK,QAAL;AACIF,MAAAA,eAAe,CAACE,IAAhB,CAAqB,cAArB;AACA;;AACJ,SAAK,OAAL;AACIF,MAAAA,eAAe,CAACE,IAAhB,CAAqB,aAArB;AACA;;AACJ;AACI;AAXR;;AAcA,UAAQH,KAAK,CAACI,KAAd;AACI,SAAK,QAAL;AACIH,MAAAA,eAAe,CAACE,IAAhB,CAAqB,cAArB;AACA;;AACJ,SAAK,QAAL;AACIF,MAAAA,eAAe,CAACE,IAAhB,CAAqB,cAArB;AACA;;AACJ;AACI;AARR;;AAWA,sBACI;AAAQ,IAAA,SAAS,EAAEF,eAAe,CAACI,IAAhB,CAAqB,GAArB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CL,KAAK,CAACM,QAArD,CADJ;AAIH,CAjCD;;AAmCA,eAAeP,MAAf","sourcesContent":["import React from 'react';\n\nimport './Button.css';\n\nconst Button = (props) => {\n\n    let attachedClasses = [\"Button\"];\n\n    switch (props.size) {\n        case \"small\":\n            attachedClasses.push(\"smallButton\");\n            break;\n        case \"medium\":\n            attachedClasses.push(\"mediumButton\");\n            break;\n        case \"large\":\n            attachedClasses.push(\"largeButton\");\n            break;\n        default:\n            break;\n    }\n\n    switch (props.color) {\n        case \"orange\":\n            attachedClasses.push(\"orangeButton\");\n            break;\n        case \"purple\":\n            attachedClasses.push(\"purpleButton\");\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <button className={attachedClasses.join(' ')}>{props.children}</button>\n    );\n\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}